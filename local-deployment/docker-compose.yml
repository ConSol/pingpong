version: "3.7"
services:
  ping:
    profiles:
      - apps
    build:
      context: ../ping
      dockerfile: ../dockerfile/Dockerfile.distroless
    environment:
      ARTEMIS_URL: tcp://artemis:61616
      ARTEMIS_USERNAME: artemis
      ARTEMIS_PASSWORD: artemis
      KAFKA_BOOTSTRAP_HOST: kafka:19092
      REPORTER_BASE_URL: http://reporter:8080/reports
      spring_profiles_active: prod
    ports:
      - "8080:8080"
    depends_on:
      - artemis
      - kafka
  pong:
    profiles:
      - apps
    build:
      context: ../pong
      dockerfile: ../dockerfile/Dockerfile.distroless
    environment:
      ARTEMIS_URL: tcp://artemis:61616
      ARTEMIS_USERNAME: artemis
      ARTEMIS_PASSWORD: artemis
      KAFKA_BOOTSTRAP_HOST: kafka:19092
      REPORTER_BASE_URL: http://reporter:8080/reports
      spring_profiles_active: prod
    ports:
      - "8081:8080"
    depends_on:
      - artemis
      - kafka
  reporter:
    profiles:
      - apps
    build:
      context: ../reporter
      dockerfile: ../dockerfile/Dockerfile.distroless
    environment:
      DB_HOST: postgres:5432
      DB_NAME: reporter
      DB_USERNAME: reporter
      DB_PASSWORD: reporter
      spring_profiles_active: prod
    ports:
      - "8082:8080"
    depends_on:
      - artemis
      - kafka
  # postgres + pgadmin4 web UI
  postgres:
    image: postgres:14.1-alpine@sha256:884c142deb4a141f67489c807534ec6139f13b9a6432d2f87a4de283aaec0b5c
    volumes:
      - ${REMOTE_PROJECT_PATH:-.}/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/:ro
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_MULTIPLE_DATABASES: reporter
    ports:
      - "5432:5432"
  pgadmin4:
    image: dpage/pgadmin4:6.4@sha256:e379d900081261dce78482e9a66bdc6f4c0dbe5924133cf7a3cd0c424ae6014f
    profiles:
      - dev-uis
    volumes:
      - ${REMOTE_PROJECT_PATH:-.}/pgadmin4/pgadmin4/servers.json:/pgadmin4/servers.json:ro
    depends_on:
      - postgres
    ports:
      - "8091:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: pgadmin4

  # apache activemq-artemis
  artemis:
    image: vromero/activemq-artemis:2.16.0-alpine@sha256:2621ab238411031e364cc219c621f20a6613efc3a91b43c85148e8872e6b3163
    volumes:
      - ${REMOTE_PROJECT_PATH:-.}/artemis/var/lib/artemis/etc-override:/var/lib/artemis/etc-override/:ro
    ports:
      - "8161:8161"
      - "61616:61616"
      - "5672:5672"
    environment:
      ARTEMIS_USERNAME: artemis
      ARTEMIS_PASSWORD: artemis

  # apache kafka + zookeeper + web UIs
  zookeeper:
    image: strimzi/kafka:0.20.1-kafka-2.5.0@sha256:6671bd4f37d2df0877e2aa6c3dba53a7c110528ced9b15c9c3f5bd32949fc4ba
    ports:
      - "2181:2181"
    command: [
      "sh",
      "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    environment:
      LOG_DIR: /tmp/logs
  kafka:
    image: strimzi/kafka:0.20.1-kafka-2.5.0@sha256:6671bd4f37d2df0877e2aa6c3dba53a7c110528ced9b15c9c3f5bd32949fc4ba
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    command: [
      "sh",
      "-c",
      "bin/kafka-server-start.sh config/server.properties \
            --override listeners=$${KAFKA_LISTENERS} \
            --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} \
            --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} \
            --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} \
            --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    environment:
      LOG_DIR: /tmp/logs
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,LOCAL://localhost:9092
      KAFKA_LISTENERS: INTERNAL://kafka:19092,LOCAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  kafdrops:
    image: obsidiandynamics/kafdrop:3.27.0@sha256:b7ba8577ce395b1975b0ed98bb53cb6b13e7d32d5442188da1ce41c0838d1ce9
    profiles:
      - dev-uis
    depends_on:
      - kafka
    ports:
      - "8092:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:19092
  kafka-ui:
    image: provectuslabs/kafka-ui:master@sha256:a2e14562d23cf7e5e6798f6bd1137f9350609a5e9f6974e19c49d2d474daab02
    profiles:
      - dev-uis
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8093:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka@docker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:19092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181